"""empty message

Revision ID: 9d0b13430a9f
Revises: 
Create Date: 2020-05-20 13:41:11.582045

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9d0b13430a9f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('county', sa.String(length=255), nullable=True),
    sa.Column('confirmed_date', sa.DateTime(), nullable=True),
    sa.Column('confirmed_count', sa.Float(), nullable=True),
    sa.Column('death_count', sa.Float(), nullable=True),
    sa.Column('recovered_count', sa.Float(), nullable=True),
    sa.Column('confirmed_count_cumsum', sa.Float(), nullable=True),
    sa.Column('death_count_cumsum', sa.Float(), nullable=True),
    sa.Column('recovered_count_cumsum', sa.Float(), nullable=True),
    sa.Column('confirmed_count_cumsum_per100k', sa.Float(), nullable=True),
    sa.Column('death_count_cumsum_per100k', sa.Float(), nullable=True),
    sa.Column('recovered_count_cumsum_per100k', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('county', 'state', 'confirmed_date')
    )
    op.create_index('myindex_cases', 'cases', ['county', 'state', 'confirmed_date'], unique=True)
    op.create_table('census',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('county', sa.String(length=255), nullable=True),
    sa.Column('total_population', sa.Float(), nullable=True),
    sa.Column('number_of_men', sa.Float(), nullable=True),
    sa.Column('number_of_women', sa.Float(), nullable=True),
    sa.Column('men_percentage', sa.Float(), nullable=True),
    sa.Column('women_percentage', sa.Float(), nullable=True),
    sa.Column('race_hispanic', sa.Float(), nullable=True),
    sa.Column('race_white', sa.Float(), nullable=True),
    sa.Column('race_black', sa.Float(), nullable=True),
    sa.Column('race_native', sa.Float(), nullable=True),
    sa.Column('race_asian', sa.Float(), nullable=True),
    sa.Column('pacific', sa.Float(), nullable=True),
    sa.Column('voting_age_citizens', sa.Float(), nullable=True),
    sa.Column('normalized_voting_age_citizens', sa.Float(), nullable=True),
    sa.Column('census_income_average', sa.Float(), nullable=True),
    sa.Column('census_income_margin', sa.Float(), nullable=True),
    sa.Column('census_income_per_capita', sa.Float(), nullable=True),
    sa.Column('census_income_per_capita_margin', sa.Float(), nullable=True),
    sa.Column('census_poverty', sa.Float(), nullable=True),
    sa.Column('census_child_poverty', sa.Float(), nullable=True),
    sa.Column('professional_job_percentage', sa.Float(), nullable=True),
    sa.Column('service_job_percentage', sa.Float(), nullable=True),
    sa.Column('office_job_percentage', sa.Float(), nullable=True),
    sa.Column('construction_job_percentage', sa.Float(), nullable=True),
    sa.Column('production_job_percentage', sa.Float(), nullable=True),
    sa.Column('commute_drive_percentage', sa.Float(), nullable=True),
    sa.Column('commute_carpool_percentage', sa.Float(), nullable=True),
    sa.Column('commute_transit_percentage', sa.Float(), nullable=True),
    sa.Column('commute_walk_percentage', sa.Float(), nullable=True),
    sa.Column('commute_other_percentage', sa.Float(), nullable=True),
    sa.Column('commute_noneed_percentage', sa.Float(), nullable=True),
    sa.Column('number_of_employed_people', sa.Float(), nullable=True),
    sa.Column('employment_private_percentage', sa.Float(), nullable=True),
    sa.Column('employment_public_percentage', sa.Float(), nullable=True),
    sa.Column('employment_self_percentage', sa.Float(), nullable=True),
    sa.Column('employment_family_percentage', sa.Float(), nullable=True),
    sa.Column('unemployment_percentage', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('myindex_census', 'census', ['county', 'state'], unique=True)
    op.create_table('covid_hospitalizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('confirmed_date', sa.DateTime(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_ag0_4', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_ag0_4', sa.Float(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_ag18_49', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_ag18_49', sa.Float(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_ag5_17', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_ag5_17', sa.Float(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_ag50_64', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_ag50_64', sa.Float(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_ag65p', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_ag65p', sa.Float(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_ag65_74', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_ag65_74', sa.Float(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_ag75_84', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_ag75_84', sa.Float(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_ag85p', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_ag85p', sa.Float(), nullable=True),
    sa.Column('state_cumulative_covid_hospitalization_rate_per_100k_agoverall', sa.Float(), nullable=True),
    sa.Column('state_weekly_covid_hospitalization_rate_per_100k_agoverall', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('state', 'confirmed_date')
    )
    op.create_index('myindex_covidhospitalization', 'covid_hospitalizations', ['state', 'confirmed_date'], unique=True)
    op.create_table('diversity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('county', sa.String(length=255), nullable=True),
    sa.Column('diversity_index', sa.Float(), nullable=True),
    sa.Column('diversity_black_race', sa.Float(), nullable=True),
    sa.Column('diversity_native_race', sa.Float(), nullable=True),
    sa.Column('diversity_asian_race', sa.Float(), nullable=True),
    sa.Column('diversity_pacific_race', sa.Float(), nullable=True),
    sa.Column('diversity_two_or_more_races', sa.Float(), nullable=True),
    sa.Column('diversity_hispanic_race', sa.Float(), nullable=True),
    sa.Column('diversity_white_race', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('myindex_diversity', 'diversity', ['county', 'state'], unique=True)
    op.create_table('election',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('county', sa.String(length=255), nullable=True),
    sa.Column('democrat', sa.Float(), nullable=True),
    sa.Column('republican', sa.Float(), nullable=True),
    sa.Column('other', sa.Float(), nullable=True),
    sa.Column('democrat_percentage', sa.Float(), nullable=True),
    sa.Column('republican_percentage', sa.Float(), nullable=True),
    sa.Column('other_than_democrat_or_republican_percentage', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_election_state'), 'election', ['state'], unique=False)
    op.create_index('myindex_election', 'election', ['county', 'state'], unique=True)
    op.create_table('google_mobility',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('county', sa.String(length=255), nullable=True),
    sa.Column('confirmed_date', sa.DateTime(), nullable=True),
    sa.Column('retail_and_recreation_percent_change_from_baseline', sa.Float(), nullable=True),
    sa.Column('grocery_and_pharmacy_percent_change_from_baseline', sa.Float(), nullable=True),
    sa.Column('parks_percent_change_from_baseline', sa.Float(), nullable=True),
    sa.Column('transit_stations_percent_change_from_baseline', sa.Float(), nullable=True),
    sa.Column('workplaces_percent_change_from_baseline', sa.Float(), nullable=True),
    sa.Column('residential_percent_change_from_baseline', sa.Float(), nullable=True),
    sa.Column('compliance', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('county', 'state', 'confirmed_date')
    )
    op.create_index('myindex_googlemobility', 'google_mobility', ['county', 'state', 'confirmed_date'], unique=True)
    op.create_table('icu_beds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('county', sa.String(length=255), nullable=True),
    sa.Column('icu_beds', sa.Float(), nullable=True),
    sa.Column('senior_population_percentage', sa.Float(), nullable=True),
    sa.Column('seniors_per_icubed', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('myindex_icubeds', 'icu_beds', ['county', 'state'], unique=True)
    op.create_table('influenza_activity_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('confirmed_date', sa.DateTime(), nullable=True),
    sa.Column('state_infleunza_activity_level', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('state', 'confirmed_date')
    )
    op.create_index('myindex_influenzaactivitylevel', 'influenza_activity_level', ['state', 'confirmed_date'], unique=True)
    op.create_table('land_and_water',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('county', sa.String(length=255), nullable=True),
    sa.Column('ALAND', sa.Float(), nullable=True),
    sa.Column('AWATER', sa.Float(), nullable=True),
    sa.Column('ALAND_SQMI', sa.Float(), nullable=True),
    sa.Column('AWATER_SQMI', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('myindex_landandwater', 'land_and_water', ['county', 'state'], unique=True)
    op.create_table('mortality',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('county', sa.String(length=255), nullable=True),
    sa.Column('mortality_rate', sa.Float(), nullable=True),
    sa.Column('min_mortality_rate', sa.Float(), nullable=True),
    sa.Column('max_mortality_rate', sa.Float(), nullable=True),
    sa.Column('change_in_mortality_rate', sa.Float(), nullable=True),
    sa.Column('min_change_in_mortality_rate', sa.Float(), nullable=True),
    sa.Column('max_change_in_mortality_rate', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('myindex_mortality', 'mortality', ['county', 'state'], unique=True)
    op.create_table('restaurant_business',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('state_eating_and_drinking_locations', sa.Float(), nullable=True),
    sa.Column('state_restaurant_worker_population', sa.Float(), nullable=True),
    sa.Column('state_restaurant_employment_percentage', sa.Float(), nullable=True),
    sa.Column('state_restaurants_annual_sale', sa.Float(), nullable=True),
    sa.Column('restaurants_table_service_to_state_contribution', sa.Float(), nullable=True),
    sa.Column('restaurants_limited_service_to_state_contribution', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('myindex_staterestaurants', 'restaurant_business', ['state'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('myindex_staterestaurants', table_name='restaurant_business')
    op.drop_table('restaurant_business')
    op.drop_index('myindex_mortality', table_name='mortality')
    op.drop_table('mortality')
    op.drop_index('myindex_landandwater', table_name='land_and_water')
    op.drop_table('land_and_water')
    op.drop_index('myindex_influenzaactivitylevel', table_name='influenza_activity_level')
    op.drop_table('influenza_activity_level')
    op.drop_index('myindex_icubeds', table_name='icu_beds')
    op.drop_table('icu_beds')
    op.drop_index('myindex_googlemobility', table_name='google_mobility')
    op.drop_table('google_mobility')
    op.drop_index('myindex_election', table_name='election')
    op.drop_index(op.f('ix_election_state'), table_name='election')
    op.drop_table('election')
    op.drop_index('myindex_diversity', table_name='diversity')
    op.drop_table('diversity')
    op.drop_index('myindex_covidhospitalization', table_name='covid_hospitalizations')
    op.drop_table('covid_hospitalizations')
    op.drop_index('myindex_census', table_name='census')
    op.drop_table('census')
    op.drop_index('myindex_cases', table_name='cases')
    op.drop_table('cases')
    # ### end Alembic commands ###
